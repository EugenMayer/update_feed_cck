<?php
// $Id$

// Copyright (c) 2010 KontextWork
// Author: Eugen Mayer

require_once 'update_feed_cck.field.inc';
require_once 'update_feed_cck.formatter.inc';
require_once 'update_feed_cck.widget.inc';

function update_feed_cck_menu() {
  $items = array();
  $items['update_feed_cck/autocomplete/modules'] = array(
    'title' => 'Update feed cck autocompletition',
    'page callback' => '_update_feed_cck_autocomplete_modules',
    'access arguments' => array('update feed cck autocompletition'), 
    'type' => MENU_CALLBACK
  );
   $items['update_feed_cck/autocomplete/releases/%'] = array(
    'title' => 'Update feed cck autocompletition',
    'page callback' => '_update_feed_cck_autocomplete_releases',
    'page arguments' => array(3,4),
    'access arguments' => array('update feed cck autocompletition'), 
    'type' => MENU_CALLBACK
  );
  return $items;
}

function update_feed_cck_perm() {
  return array('update feed cck autocompletition');
}

function update_feed_cck_theme() {
  return array(
    'update_feed_cck_package_table' => array (
      'arguments' => array('packages' => NULL, 'field_name' => NULL, 'nid' => NULL),
    ),
    'update_feed_module' => array (
      'arguments' => array('element' => NULL),
    ),
    'update_feed_cck_value' => array(
      'arguments' => array('value' => NULL, 'name' => NULL, 'field' => NULL),
      'file' => 'update_feed_cck.formatter.inc',
    ),
    'update_feed_cck_formatter_default' => array(
      'arguments' => array('element' => NULL),
      'function' => 'update_feed_cck_table',
      'file' => 'update_feed_cck.formatter.inc',
    ),
    'update_feed_cck_formatter_server_key' => array(
      'arguments' => array('element' => NULL, 'server_key'),
      'file' => 'update_feed_cck.formatter.inc',
    ),
    'update_feed_cck_formatter_short_name' => array(
     'arguments' => array('element' => NULL, '_short_name'),
      'file' => 'update_feed_cck.formatter.inc',
    ),
    'update_feed_cck_formatter_module_release' => array(
      'arguments' => array('element' => NULL, 'release'),
      'file' => 'update_feed_cck.formatter.inc',
    ),
    'update_feed_cck_formatter_api_version' => array(
      'arguments' => array('element' => NULL),
      'file' => 'update_feed_cck.formatter.inc',
    ),
  );
}

function theme_update_feed_cck_package_table($packages, $field_name = '', $nid = NULL) {
  $header = array(
    t('Module'),
    t('Release'),
    t('API'),
    t('Server'),
  );
  $field = NULL;
  if($field_name != '') {
    $field = content_fields($field_name);
  }
  foreach($packages as $item) {
    $rows[] = array(
      'data' => array(
        'short_name' => theme('update_feed_cck_value',check_plain($item['short_name']), 'short_name', $field),
        'version' => theme('update_feed_cck_value',check_plain($item['module_release']), 'module_release',  $field),
        'api_version' => theme('update_feed_cck_value',check_plain($item['api_version']), 'api_version', $field),
        'server_key' => theme('update_feed_cck_value',check_plain($item['server_key']), 'server_key', $field ),
      ),
    );  
  }
  
  return theme('table', $header, $rows);
}

function _update_feed_cck_autocomplete_modules() {
  $server_key = $_GET['server_key'];
  $api_version = $_GET['api'];
  $keyword = $_GET['search'];
  
  $pl = new Project_list(array('server_key' => $server_key, 'api_version' => $api_version), 20);
  $pl->search($keyword);
  $result = $pl->to_array();
  autocomplete_element_output($result);
  exit();
}

function _update_feed_cck_autocomplete_releases($field_name, $delta) {
  $cck_field = $_POST[$field_name][$delta];
  $server_key = $cck_field['server_key'];
  $short_name = $cck_field['short_name'];
  $api_version = $cck_field['api_version'];
  if(!empty($server_key) && !empty($short_name) && !empty($api_version)) {
    $p = update_feed_api_get_project($server_key, $short_name, $api_version, TRUE);
  }
    
  $form_state = array('submitted' => FALSE);
  $form_build_id = $_POST['form_build_id'];
  $form = form_get_cache($form_build_id, $form_state);
  $form += array(
    '#post' => $_POST,
    '#programmed' => FALSE,
  );
   // Rebuild the form.
  $form = form_builder($_POST['form_id'], $form, $form_state);
  // Render the new output.
  $new_form = $form[$field_name][$delta]['module_release'];
  $output =  drupal_render($new_form);  
  print drupal_to_js(array('data' => $output, 'status' => true));
  exit();
}